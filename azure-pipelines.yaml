name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
  #  # Needed for Terraform VM deployment
  #   - task: InstallSSHKey@0
  #     inputs:
  #       knownHostsEntry: 'KNOWN_HOSTS_STRING'
  #       sshPublicKey: 'PUBLIC_KEY'
  #       sshKeySecureFile: 'id_rsa'
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
    
- stage:
  jobs:
  - job: InfraCreation
    steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        inputs: 
          terraformVersion: '0.12.26'
        displayName: 'Install Terraform 0.12.26'
      
      - task: AzureCLI@1
        inputs:
          azureSubscription: '$(subscription_name)'
          scriptLocation: 'inlineScript'
          inlineScript: 'terraform version'
        displayName: "Terraform Version"
      
      - task: AzureCLI@1
        inputs:
          azureSubscription: '$(subscription_name)'
          scriptLocation: 'inlineScript'
          inlineScript: |
            terraform version
            cd $(System.DefaultWorkingDirectory)/terraform
            
            echo '#######Az login check ########'
            az account list-locations
            
            echo '#######Terraform Init########'
            terraform init
            
            echo '#########Pub Key###########'
            echo $(TF_VAR_PUB)
            
            echo '#######Terraform Plan########'
            terraform plan -var='pub=$(TF_VAR_PUB)'
            
            echo '#######Terraform Apply########'
            terraform apply -var='pub=$(TF_VAR_PUB)' -auto-approve
        displayName: 'Terraform Init, Plan and Apply'
      
  - deployment: FakeRestAPI
    dependsOn: InfraCreation      
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: '$(subscription_name)'
              appName: 'AppServiceTest-AppServiceLesson'
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  - deployment: VMDeploy
    dependsOn: FakeRestAPI          
    displayName: WebDeployment
    environment:
      name:  'TEST'
      resourceType: VirtualMachine
      tags: web
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                #! /bin/bash
                
                sudo apt-get upgrade -y
                sudo apt-get install python3-pip -y
                sudo apt-get install unzip -y
                sudo apt-get install -y chromium-browser
                pip3 install selenium
                export PATH=$PATH:some/path


